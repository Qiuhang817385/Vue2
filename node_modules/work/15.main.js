

            var Test = {
                template:`
                    <div>
                        我是test组件   
                        <input type="text" v-model="text"/>
                        <button @click="change">按钮</button> 
                    </div>
                `,data:function() {
                    return {
                        text:'hello'
                    }
                },
                methods: {
                    change:function(){
                        this.text = 'bbb'
                    }
                },
                //对应父组件,v-if false 就销毁当前组件
                beforeDestroy:function() {
                    console.log('beforeDestroy')//销毁之前
                },
                destroyed:function() {
                    console.log('destroyed')//销毁之前
                },
                beforeCreate :function(){
                    //组件创建之前
                    console.log('beforeCreate')
                },
                created:function() {
                    //组件创建之后
                    console.log('created')
                },  
                activated:function() {
                    console.log('组件被激活了')
                }, 
                deactivated:function() {
                    console.log('组件被停用了')
                },
                // =========================================================================================
                // beforeMount:function(){
                //     // console.log(document.body.innerHTML);
                //     console.log('beforeMount');

                // },
                // mounted:function() {
                //     // console.log(document.body.innerHTML);
                //     console.log('mounted');

                // },//beforeMount,mounted改变页面是自然发生的,加载就会改变
                beforeUpdate:function(){
                    console.log(document.body.innerHTML);
                },
                updated:function() {
                    console.log(document.body.innerHTML);
                },//beforeUpdate,updated改变页面是基于数据改变  
            }

          var App = {
            components:{
                test:Test
            },
            template:`
                <div>
                <keep-alive>
                   <test v-if="isExit"></test> 
                </keep-alive>
                  
                   <button @click="changeisExit">是否销毁</button>   
                </div>
            `,
            data:function() {
                return {
                    isExit:true
                }
            },
            methods: {
                changeisExit:function(){
                    this.isExit = !this.isExit
                }
            },
            
        }
        new Vue({
            el:'#app',
            components: {
                    app: App
                },
                template: `
                <app/>
            `,
            data:function() {
                return {
                }
            },
            
        })
   